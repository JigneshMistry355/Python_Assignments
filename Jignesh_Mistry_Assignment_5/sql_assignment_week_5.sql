CREATE DATABASE IF NOT EXISTS MYSHOP;
USE MYSHOP;

CREATE TABLE IF NOT EXISTS SALES (
	SALES_ID INT NOT NULL AUTO_INCREMENT,
    CUSTOMER_ID VARCHAR(20) NOT NULL, 
    PRODUCT VARCHAR(100),
    QUANTITY INT,
    PRICE DOUBLE(6, 2),
    SALES_DATE DATE,
    PRIMARY KEY (SALES_ID)
) ENGINE = INNODB;

INSERT INTO Sales (SALES_ID, CUSTOMER_ID, PRODUCT, QUANTITY, PRICE, SALES_DATE) VALUES
(1, 'CUST001', 'Laptop', 2, 750.00, '2025-09-18'),
(2, 'CUST001', 'Mouse', 1, 15.00, '2025-09-18'), 
(3, 'CUST002', 'Smartphone', 1, 500.00, '2025-09-18'),
(4, 'CUST002', 'Power Bank', 2, 25.00, '2025-09-18'), 
(5, 'CUST003', 'Headphones', 3, 50.00, '2025-09-17'),
(6, 'CUST003', 'Headphones', 2, 50.00, '2025-09-10'), 
(7, 'CUST004', 'Monitor', 1, 200.00, '2025-09-16'),
(8, 'CUST004', 'Keyboard', 1, 25.00, '2025-09-16'),
(9, 'CUST005', 'Keyboard', 5, 25.00, '2025-09-15'),
(10, 'CUST005', 'Mouse', 2, 15.00, '2025-09-15'),
(11, 'CUST006', 'Printer', 1, 120.00, '2025-09-14'),
(12, 'CUST007', 'Tablet', 2, 300.00, '2025-09-14'),
(13, 'CUST007', 'Laptop Bag', 1, 40.00, '2025-09-14'),
(14, 'CUST008', 'Webcam', 3, 35.00, '2025-09-13'),
(15, 'CUST009', 'Desk Chair', 1, 180.00, '2025-09-13'),
(16, 'CUST009', 'Speakers', 1, 45.00, '2025-09-13'), 
(17, 'CUST010', 'Power Bank', 3, 25.00, '2025-09-12'),
(18, 'CUST010', 'Smartwatch', 1, 150.00, '2025-09-12'),
(19, 'CUST011', 'External HDD', 2, 90.00, '2025-09-11'),
(20, 'CUST012', 'SSD', 3, 80.00, '2025-09-10'),
(21, 'CUST012', 'Router', 1, 60.00, '2025-09-10'),
(22, 'CUST013', 'Graphics Card', 1, 400.00, '2025-09-09'),
(23, 'CUST013', 'RAM (16GB)', 2, 70.00, '2025-09-09'),
(24, 'CUST014', 'CPU', 1, 350.00, '2025-09-08'),
(25, 'CUST014', 'Motherboard', 1, 250.00, '2025-09-08');



SELECT * FROM SALES;



SELECT PRODUCT, PRICE, SUM(QUANTITY), SUM(QUANTITY * PRICE) AS TOTAL_SALES
FROM SALES 
GROUP BY PRODUCT, PRICE
ORDER BY PRICE ASC;



SELECT CUSTOMER_ID, COUNT(*) AS TOTAL_PRODUCTS, SUM(QUANTITY * PRICE) AS TOTAL_SPENT
FROM SALES
GROUP BY CUSTOMER_ID
ORDER BY TOTAL_SPENT DESC
LIMIT 3;



SELECT MONTH(SALES_DATE), SUM(QUANTITY * PRICE) AS MONTHLY_SALES
FROM SALES
GROUP BY MONTH(SALES_DATE);



SELECT PRODUCT, SUM(QUANTITY) AS TOTAL_PRODUCTS 
FROM SALES
GROUP BY PRODUCT
ORDER BY TOTAL_PRODUCTS DESC
LIMIT 1;

